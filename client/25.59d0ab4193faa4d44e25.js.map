{"version":3,"sources":["webpack:///./components/authorize/authorize.jsx","webpack:///./components/authorize/index.js"],"names":["Authorize","React","Component","location","PropTypes","object","isRequired","actions","shape","getOAuthAppInfo","func","allowOAuth2","constructor","props","super","searchParams","URLSearchParams","this","search","params","responseType","get","clientId","redirectUri","state","scope","then","data","error","redirect","window","href","setState","message","startsWith","browserHistory","replace","componentDidMount","blocker","document","getElementById","parentNode","removeChild","test","app","render","icon","icon_url","icon50","className","alt","src","width","height","id","defaultMessage","values","appName","name","type","onClick","handleDeny","handleAllow","connect","dispatch","bindActionCreators"],"mappings":"oXAae,MAAMA,UAAkBC,IAAMC,UACzC,uBACI,MAAO,CACHC,SAAUC,IAAUC,OAAOC,WAC3BC,QAASH,IAAUI,MAAM,CACrBC,gBAAiBL,IAAUM,KAAKJ,WAChCK,YAAaP,IAAUM,KAAKJ,aAC7BA,YAIXM,YAAYC,GACRC,MAAMD,GADS,qBAyBL,KACV,MAAME,EAAe,IAAIC,gBAAgBC,KAAKJ,MAAMV,SAASe,QACvDC,EAAS,CACXC,aAAcL,EAAaM,IAAI,iBAC/BC,SAAUP,EAAaM,IAAI,aAC3BE,YAAaR,EAAaM,IAAI,gBAC9BG,MAAOT,EAAaM,IAAI,SACxBI,MAAOV,EAAaM,IAAI,UAG5BJ,KAAKJ,MAAMN,QAAQI,YAAYQ,GAAQO,KACnC,EAAEC,OAAMC,YACAD,GAAQA,EAAKE,SACbC,OAAO3B,SAAS4B,KAAOJ,EAAKE,SACrBD,GACPX,KAAKe,SAAS,CAACJ,MAAOA,EAAMK,cAxCzB,oBA8CN,KACT,MAAMV,EAAe,IAAIP,gBAAgBC,KAAKJ,MAAMV,SAASe,QAASG,IAAI,gBACtEE,EAAYW,WAAW,aAAeX,EAAYW,WAAW,WAC7DJ,OAAO3B,SAAS4B,KAAOR,EAAc,uBAIzCY,IAAeC,QAAQ,YAlDvBnB,KAAKO,MAAQ,GAGjBa,oBAEI,MAAMC,EAAUC,SAASC,eAAe,iBACpCF,GACAA,EAAQG,WAAWC,YAAYJ,GAEnC,MAAMhB,EAAY,IAAIN,gBAAgBC,KAAKJ,MAAMV,SAASe,QAASG,IAAI,aAChE,cAAesB,KAAKrB,IAI3BL,KAAKJ,MAAMN,QAAQE,gBAAgBa,GAAUI,KACzC,EAAEC,WACMA,GACAV,KAAKe,SAAS,CAACY,IAAKjB,MAoCpCkB,SACI,MAAMD,EAAM3B,KAAKO,MAAMoB,IACvB,IAAKA,EACD,OAAO,KAGX,IAAIE,EAOAlB,EASJ,OAdIkB,EADAF,EAAIG,SACGH,EAAIG,SAEJC,IAIP/B,KAAKO,MAAMI,QACXA,EACI,yBAAKqB,UAAU,4BACX,kBAAC,IAAD,CAAWrB,MAAOX,KAAKO,MAAMI,UAMrC,yBAAKqB,UAAU,mBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,oBACX,yBACIC,IAAK,cACLC,IAAKL,EACLM,MAAM,KACNC,OAAO,QAGf,yBAAKJ,UAAU,QACX,kBAAC,IAAD,CACIK,GAAG,kBACHC,eAAe,yEACfC,OAAQ,CACJC,QAASb,EAAIc,UAK7B,2BACI,kBAAC,IAAD,CACIJ,GAAG,gBACHC,eAAe,4FACfC,OAAQ,CACJC,QAASb,EAAIc,SAIzB,wBAAIT,UAAU,iBACV,kBAAC,IAAD,CACIK,GAAG,mBACHC,eAAe,8BACfC,OAAQ,CACJC,QAASb,EAAIc,SAIzB,yBAAKT,UAAU,mBACX,4BACIU,KAAK,SACLV,UAAU,6BACVW,QAAS3C,KAAK4C,YAEd,kBAAC,IAAD,CACIP,GAAG,iBACHC,eAAe,UAGvB,4BACII,KAAK,SACLV,UAAU,gCACVW,QAAS3C,KAAK6C,aAEd,kBAAC,IAAD,CACIR,GAAG,kBACHC,eAAe,YAI1B3B,KCjJNmC,4BAAQ,MATvB,SAA4BC,GACxB,MAAO,CACHzD,QAAS0D,6BAAmB,CACxBxD,oBACAE,iBACDqD,MAIID,CAAkC/D","file":"25.59d0ab4193faa4d44e25.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport icon50 from 'images/icon50x50.png';\nimport FormError from 'components/form_error';\nimport {browserHistory} from 'utils/browser_history';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class Authorize extends React.Component {\n    static get propTypes() {\n        return {\n            location: PropTypes.object.isRequired,\n            actions: PropTypes.shape({\n                getOAuthAppInfo: PropTypes.func.isRequired,\n                allowOAuth2: PropTypes.func.isRequired,\n            }).isRequired,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        // if we get to this point remove the antiClickjack blocker\n        const blocker = document.getElementById('antiClickjack');\n        if (blocker) {\n            blocker.parentNode.removeChild(blocker);\n        }\n        const clientId = (new URLSearchParams(this.props.location.search)).get('client_id');\n        if (!((/^[a-z0-9]+$/).test(clientId))) {\n            return;\n        }\n\n        this.props.actions.getOAuthAppInfo(clientId).then(\n            ({data}) => {\n                if (data) {\n                    this.setState({app: data});\n                }\n            });\n    }\n\n    handleAllow = () => {\n        const searchParams = new URLSearchParams(this.props.location.search);\n        const params = {\n            responseType: searchParams.get('response_type'),\n            clientId: searchParams.get('client_id'),\n            redirectUri: searchParams.get('redirect_uri'),\n            state: searchParams.get('state'),\n            scope: searchParams.get('store'),\n        };\n\n        this.props.actions.allowOAuth2(params).then(\n            ({data, error}) => {\n                if (data && data.redirect) {\n                    window.location.href = data.redirect;\n                } else if (error) {\n                    this.setState({error: error.message});\n                }\n            }\n        );\n    }\n\n    handleDeny = () => {\n        const redirectUri = (new URLSearchParams(this.props.location.search)).get('redirect_uri');\n        if (redirectUri.startsWith('https://') || redirectUri.startsWith('http://')) {\n            window.location.href = redirectUri + '?error=access_denied';\n            return;\n        }\n\n        browserHistory.replace('/error');\n    }\n\n    render() {\n        const app = this.state.app;\n        if (!app) {\n            return null;\n        }\n\n        let icon;\n        if (app.icon_url) {\n            icon = app.icon_url;\n        } else {\n            icon = icon50;\n        }\n\n        let error;\n        if (this.state.error) {\n            error = (\n                <div className='prompt__error form-group'>\n                    <FormError error={this.state.error}/>\n                </div>\n            );\n        }\n\n        return (\n            <div className='container-fluid'>\n                <div className='prompt'>\n                    <div className='prompt__heading'>\n                        <div className='prompt__app-icon'>\n                            <img\n                                alt={'prompt icon'}\n                                src={icon}\n                                width='50'\n                                height='50'\n                            />\n                        </div>\n                        <div className='text'>\n                            <FormattedMarkdownMessage\n                                id='authorize.title'\n                                defaultMessage='Authorize **{appName}** to Connect to Your **Mattermost** User Account'\n                                values={{\n                                    appName: app.name,\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='authorize.app'\n                            defaultMessage='The app **{appName}** would like the ability to access and modify your basic information.'\n                            values={{\n                                appName: app.name,\n                            }}\n                        />\n                    </p>\n                    <h2 className='prompt__allow'>\n                        <FormattedMarkdownMessage\n                            id='authorize.access'\n                            defaultMessage='Allow **{appName}** access?'\n                            values={{\n                                appName: app.name,\n                            }}\n                        />\n                    </h2>\n                    <div className='prompt__buttons'>\n                        <button\n                            type='submit'\n                            className='btn btn-link authorize-btn'\n                            onClick={this.handleDeny}\n                        >\n                            <FormattedMessage\n                                id='authorize.deny'\n                                defaultMessage='Deny'\n                            />\n                        </button>\n                        <button\n                            type='submit'\n                            className='btn btn-primary authorize-btn'\n                            onClick={this.handleAllow}\n                        >\n                            <FormattedMessage\n                                id='authorize.allow'\n                                defaultMessage='Allow'\n                            />\n                        </button>\n                    </div>\n                    {error}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {allowOAuth2, getOAuthAppInfo} from 'actions/admin_actions.jsx';\n\nimport Authorize from './authorize';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOAuthAppInfo,\n            allowOAuth2,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(Authorize);\n"],"sourceRoot":""}