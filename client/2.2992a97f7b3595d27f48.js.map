{"version":3,"sources":["webpack:///./node_modules/mattermost-redux/actions/timezone.js","webpack:///./components/logged_in/logged_in.jsx","webpack:///./components/logged_in/index.js"],"names":["Object","defineProperty","exports","value","tslib_1","users_1","timezone_1","users_2","autoUpdateTimezone","deviceTimezone","_this","this","dispatch","getState","__awaiter","currentUer","currentTimezone","newTimezoneExists","timezone","updatedUser","__generator","_a","getCurrentUser","getUserTimezone","id","automaticTimezone","useAutomaticTimezone","manualTimezone","__assign","updateMe","store","LoggedIn","React","PureComponent","constructor","props","super","origin","data","type","message","currentUser","window","location","version","desktop","semver","valid","coerce","userIsActive","manual","WebSocketClient","userUpdateActiveStatus","channel","teamId","focus","actions","getChannelURLAction","root","document","getElementById","className","isValidState","componentDidMount","WebSocketActions","enableTimezone","getBrowserTimezone","$","on","off","cookie","indexOf","viewChannel","currentChannelId","addEventListener","onFocusListener","onBlurListener","onDesktopMessageListener","postMessage","UserAgent","addClass","attr","GlobalActions","encodeURIComponent","pathname","ev","prev","next","removeClass","closest","find","e","which","target","is","preventDefault","componentWillUnmount","removeEventListener","render","mfaRequired","to","showTermsOfService","children","PropTypes","object","string","bool","isRequired","shape","func","browserHistory","push","getChannelURL","connect","state","ownProps","license","getLicense","config","getConfig","shouldShowTermsOfService","getCurrentChannelId","checkIfMFARequired","match","url","ExperimentalTimezone","bindActionCreators"],"mappings":"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","file":"2.2992a97f7b3595d27f48.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nvar users_1 = require(\"../selectors/entities/users\");\nvar timezone_1 = require(\"../selectors/entities/timezone\");\nvar users_2 = require(\"./users\");\nfunction autoUpdateTimezone(deviceTimezone) {\n    var _this = this;\n    return function (dispatch, getState) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var currentUer, currentTimezone, newTimezoneExists, timezone, updatedUser;\n        return tslib_1.__generator(this, function (_a) {\n            currentUer = users_1.getCurrentUser(getState());\n            currentTimezone = timezone_1.getUserTimezone(getState(), currentUer.id);\n            newTimezoneExists = currentTimezone.automaticTimezone !== deviceTimezone;\n            if (currentTimezone.useAutomaticTimezone && newTimezoneExists) {\n                timezone = {\n                    useAutomaticTimezone: 'true',\n                    automaticTimezone: deviceTimezone,\n                    manualTimezone: currentTimezone.manualTimezone,\n                };\n                updatedUser = tslib_1.__assign(tslib_1.__assign({}, currentUer), { timezone: timezone });\n                users_2.updateMe(updatedUser)(dispatch, getState);\n            }\n            return [2 /*return*/];\n        });\n    }); };\n}\nexports.autoUpdateTimezone = autoUpdateTimezone;\n//# sourceMappingURL=timezone.js.map","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Redirect} from 'react-router';\nimport {viewChannel} from 'mattermost-redux/actions/channels';\nimport semver from 'semver';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport * as WebSocketActions from 'actions/websocket_actions.jsx';\nimport * as UserAgent from 'utils/user_agent';\nimport LoadingScreen from 'components/loading_screen';\nimport {getBrowserTimezone} from 'utils/timezone.jsx';\nimport store from 'stores/redux_store.jsx';\nimport WebSocketClient from 'client/web_websocket_client.jsx';\n\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nconst BACKSPACE_CHAR = 8;\n\nexport default class LoggedIn extends React.PureComponent {\n    static propTypes = {\n        currentUser: PropTypes.object,\n        currentChannelId: PropTypes.string,\n        children: PropTypes.object,\n        mfaRequired: PropTypes.bool.isRequired,\n        enableTimezone: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n            autoUpdateTimezone: PropTypes.func.isRequired,\n            getChannelURLAction: PropTypes.func.isRequired,\n        }).isRequired,\n        showTermsOfService: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        const root = document.getElementById('root');\n        if (root) {\n            root.className += ' channel-view';\n        }\n    }\n\n    isValidState() {\n        return this.props.currentUser != null;\n    }\n\n    componentDidMount() {\n        // Initialize websocket\n        WebSocketActions.initialize();\n\n        if (this.props.enableTimezone) {\n            this.props.actions.autoUpdateTimezone(getBrowserTimezone());\n        }\n\n        // Make sure the websockets close and reset version\n        $(window).on('beforeunload',\n            () => {\n                // Turn off to prevent getting stuck in a loop\n                $(window).off('beforeunload');\n                if (document.cookie.indexOf('MMUSERID=') > -1) {\n                    viewChannel('', this.props.currentChannelId || '')(dispatch, getState);\n                }\n                WebSocketActions.close();\n            }\n        );\n\n        // Listen for focused tab/window state\n        window.addEventListener('focus', this.onFocusListener);\n        window.addEventListener('blur', this.onBlurListener);\n\n        // Listen for messages from the desktop app\n        window.addEventListener('message', this.onDesktopMessageListener);\n\n        // Tell the desktop app the webapp is ready\n        window.postMessage(\n            {\n                type: 'webapp-ready',\n            },\n            window.location.origin\n        );\n\n        // Because current CSS requires the root tag to have specific stuff\n\n        // Device tracking setup\n        if (UserAgent.isIos()) {\n            $('body').addClass('ios');\n        } else if (UserAgent.isAndroid()) {\n            $('body').addClass('android');\n        }\n\n        if (!this.props.currentUser) {\n            $('#root').attr('class', '');\n            GlobalActions.emitUserLoggedOutEvent('/login?redirect_to=' + encodeURIComponent(this.props.location.pathname), true, false);\n        }\n\n        $('body').on('mouseenter mouseleave', ':not(.post-list__dynamic) .post', function mouseOver(ev) {\n            if (ev.type === 'mouseenter') {\n                $(this).prev('.date-separator, .new-separator').addClass('hovered--after');\n                $(this).next('.date-separator, .new-separator').addClass('hovered--before');\n            } else {\n                $(this).prev('.date-separator, .new-separator').removeClass('hovered--after');\n                $(this).next('.date-separator, .new-separator').removeClass('hovered--before');\n            }\n        });\n\n        $('body').on('mouseenter mouseleave', '.search-item__container .post', function mouseOver(ev) {\n            if (ev.type === 'mouseenter') {\n                $(this).closest('.search-item__container').find('.date-separator').addClass('hovered--after');\n                $(this).closest('.search-item__container').next('div').find('.date-separator').addClass('hovered--before');\n            } else {\n                $(this).closest('.search-item__container').find('.date-separator').removeClass('hovered--after');\n                $(this).closest('.search-item__container').next('div').find('.date-separator').removeClass('hovered--before');\n            }\n        });\n\n        $('body').on('mouseenter mouseleave', ':not(.post-list__dynamic) .post.post--comment.same--root', function mouseOver(ev) {\n            if (ev.type === 'mouseenter') {\n                $(this).prev('.date-separator, .new-separator').addClass('hovered--comment');\n                $(this).next('.date-separator, .new-separator').addClass('hovered--comment');\n            } else {\n                $(this).prev('.date-separator, .new-separator').removeClass('hovered--comment');\n                $(this).next('.date-separator, .new-separator').removeClass('hovered--comment');\n            }\n        });\n\n        // Prevent backspace from navigating back a page\n        $(window).on('keydown.preventBackspace', (e) => {\n            if (e.which === BACKSPACE_CHAR && !$(e.target).is('input, textarea')) {\n                e.preventDefault();\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        WebSocketActions.close();\n\n        $('body').off('click.userpopover');\n        $('body').off('mouseenter mouseleave', '.post');\n        $('body').off('mouseenter mouseleave', '.post.post--comment.same--root');\n\n        $('.modal').off('show.bs.modal');\n\n        $(window).off('keydown.preventBackspace');\n\n        window.removeEventListener('focus', this.onFocusListener);\n        window.removeEventListener('blur', this.onBlurListener);\n        window.removeEventListener('message', this.onDesktopMessageListener);\n    }\n\n    render() {\n        if (!this.isValidState()) {\n            return <LoadingScreen/>;\n        }\n\n        if (this.props.mfaRequired) {\n            if (this.props.location.pathname !== '/mfa/setup') {\n                return <Redirect to={'/mfa/setup'}/>;\n            }\n        } else if (this.props.location.pathname === '/mfa/confirm') {\n            // Nothing to do. Wait for MFA flow to complete before prompting TOS.\n        } else if (this.props.showTermsOfService) {\n            if (this.props.location.pathname !== '/terms_of_service') {\n                return <Redirect to={'/terms_of_service?redirect_to=' + encodeURIComponent(this.props.location.pathname)}/>;\n            }\n        }\n\n        return this.props.children;\n    }\n\n    onFocusListener() {\n        GlobalActions.emitBrowserFocus(true);\n    }\n\n    onBlurListener() {\n        GlobalActions.emitBrowserFocus(false);\n    }\n\n    // listen for messages from the desktop app\n    onDesktopMessageListener = ({origin, data: {type, message = {}} = {}} = {}) => {\n        if (!this.props.currentUser) {\n            return;\n        }\n        if (origin !== window.location.origin) {\n            return;\n        }\n\n        switch (type) {\n        case 'register-desktop': {\n            const {version} = message;\n            if (!window.desktop) {\n                window.desktop = {};\n            }\n            window.desktop.version = semver.valid(semver.coerce(version));\n            break;\n        }\n        case 'user-activity-update': {\n            const {userIsActive, manual} = message;\n\n            // update the server with the users current away status\n            if (userIsActive === true || userIsActive === false) {\n                WebSocketClient.userUpdateActiveStatus(userIsActive, manual);\n            }\n            break;\n        }\n        case 'notification-clicked': {\n            const {channel, teamId} = message;\n            window.focus();\n\n            // navigate to the appropriate channel\n            this.props.actions.getChannelURLAction(channel, teamId);\n            break;\n        }\n        }\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {autoUpdateTimezone} from 'mattermost-redux/actions/timezone';\nimport {getCurrentChannelId} from 'mattermost-redux/selectors/entities/channels';\nimport {getLicense, getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUser, shouldShowTermsOfService} from 'mattermost-redux/selectors/entities/users';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {checkIfMFARequired} from 'utils/route';\nimport {getChannelURL} from 'utils/utils';\n\nimport LoggedIn from './logged_in.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n    const showTermsOfService = shouldShowTermsOfService(state);\n\n    return {\n        currentUser: getCurrentUser(state),\n        currentChannelId: getCurrentChannelId(state),\n        mfaRequired: checkIfMFARequired(getCurrentUser(state), license, config, ownProps.match.url),\n        enableTimezone: config.ExperimentalTimezone === 'true',\n        showTermsOfService,\n    };\n}\n\n// NOTE: suggestions where to keep this welcomed\nconst getChannelURLAction = (channel, teamId) => (dispatch, getState) => browserHistory.push(getChannelURL(getState(), channel, teamId));\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            autoUpdateTimezone,\n            getChannelURLAction,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoggedIn);\n"],"sourceRoot":""}