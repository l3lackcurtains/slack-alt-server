{"version":3,"sources":["webpack:///./components/common/back_button.tsx","webpack:///./components/should_verify_email/should_verify_email.js","webpack:///./components/should_verify_email/index.js"],"names":["BackButton","React","PureComponent","render","id","className","onClick","this","props","to","url","defaultMessage","title","toString","ShouldVerifyEmail","constructor","super","async","email","URLSearchParams","location","search","get","setState","resendStatus","data","error","actions","sendVerificationEmail","state","resendConfirm","values","siteName","handleResend","PropTypes","object","isRequired","string","shape","func","connect","SiteName","getConfig","dispatch","bindActionCreators"],"mappings":"sTAoBe,MAAMA,UAAmBC,IAAMC,cAKnCC,SACH,OACI,yBACIC,GAAG,cACHC,UAAU,iBAEV,kBAAC,IAAD,CACIC,QAASC,KAAKC,MAAMF,QACpBG,GAAIF,KAAKC,MAAME,KAEf,kBAAC,IAAD,CACIN,GAAG,qBACHO,eAAe,aAEbC,GACE,0BACIR,GAAG,mBACHC,UAAU,yBACVO,MAAOA,EAAMC,cAIzB,kBAAC,IAAD,CACIT,GAAG,kBACHO,eAAe,Y,EA7BlBX,E,aARjBU,I,WAKAJ,Q,aAGiBN,E,eAC4B,CACzCU,IAAK,O,gSCZE,MAAMI,UAA0Bb,IAAMC,cASjDa,YAAYP,GACRQ,MAAMR,GADS,sBAQJS,UACX,MAAMC,EAAS,IAAIC,gBAAgBZ,KAAKC,MAAMY,SAASC,QAASC,IAAI,SAEpEf,KAAKgB,SAAS,CAACC,aAAc,YAE7B,MAAM,KAACC,EAAD,MAAOC,SAAenB,KAAKC,MAAMmB,QAAQC,sBAAsBV,GACjEO,EACAlB,KAAKgB,SAAS,CAACC,aAAc,YACtBE,GACPnB,KAAKgB,SAAS,CAACC,aAAc,cAdjCjB,KAAKsB,MAAQ,CACTL,aAAc,QAiBtBrB,SACI,IAAI2B,EAAgB,GAuCpB,MArCgC,YAA5BvB,KAAKsB,MAAML,eACXM,EACI,6BACI,6BACA,uBAAGzB,UAAU,uBACT,kBAAC,IAAD,MACA,kBAAC,IAAD,CACID,GAAG,oBACHO,eAAe,iCAOH,YAA5BJ,KAAKsB,MAAML,eACXM,EACI,6BACI,6BACA,uBAAGzB,UAAU,sBACT,kBAAC,IAAD,CACID,GAAG,qBACHO,eAAe,gBAEbC,GACE,uBACIP,UAAU,cACVO,MAAOA,KAInB,kBAAC,IAAD,CAAkBR,GAAG,2BAOjC,6BACI,kBAAC,IAAD,MACA,yBAAKC,UAAU,aACX,yBAAKA,UAAU,0BACX,4BACI,kBAAC,IAAD,CACID,GAAG,sBACHO,eAAe,kCACfoB,OAAQ,CACJC,SAAUzB,KAAKC,MAAMwB,aAIjC,6BACI,2BACI,kBAAC,IAAD,CACI5B,GAAG,+BACHO,eAAe,sEAGvB,4BACIL,QAASC,KAAK0B,aACd5B,UAAU,mBAEV,kBAAC,IAAD,CACID,GAAG,sBACHO,eAAe,kBAGtBmB,O,EApGRhB,E,YACE,CACfM,SAAUc,IAAUC,OAAOC,WAC3BJ,SAAUE,IAAUG,OAAOD,WAC3BT,QAASO,IAAUI,MAAM,CACrBV,sBAAuBM,IAAUK,KAAKH,aACvCA,aCKII,4BAXUX,IACrB,MAAOY,SAAUT,GAAYU,oBAAUb,GACvC,MAAO,CAACG,aAGgBW,IAAD,CACvBhB,QAASiB,6BAAmB,CACxBhB,+CACDe,KAGQH,CAA6C1B","file":"23.aad57a997c4473ef004f.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\ntype Props = {\n\n    /**\n     * URL to return to\n     */\n    url: string;\n\n    /**\n     * onClick handler when user clicks back button\n     */\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nexport default class BackButton extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        url: '/'\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title: string | JSX.Element) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title.toString()}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport BackButton from 'components/common/back_button';\nimport SuccessIcon from 'components/widgets/icons/fa_success_icon';\n\nexport default class ShouldVerifyEmail extends React.PureComponent {\n    static propTypes = {\n        location: PropTypes.object.isRequired,\n        siteName: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            sendVerificationEmail: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            resendStatus: 'none',\n        };\n    }\n\n    handleResend = async () => {\n        const email = (new URLSearchParams(this.props.location.search)).get('email');\n\n        this.setState({resendStatus: 'sending'});\n\n        const {data, error} = await this.props.actions.sendVerificationEmail(email);\n        if (data) {\n            this.setState({resendStatus: 'success'});\n        } else if (error) {\n            this.setState({resendStatus: 'failure'});\n        }\n    }\n\n    render() {\n        let resendConfirm = '';\n\n        if (this.state.resendStatus === 'success') {\n            resendConfirm = (\n                <div>\n                    <br/>\n                    <p className='alert alert-success'>\n                        <SuccessIcon/>\n                        <FormattedMessage\n                            id='email_verify.sent'\n                            defaultMessage=' Verification email sent.'\n                        />\n                    </p>\n                </div>\n            );\n        }\n\n        if (this.state.resendStatus === 'failure') {\n            resendConfirm = (\n                <div>\n                    <br/>\n                    <p className='alert alert-danger'>\n                        <FormattedMessage\n                            id='generic_icons.fail'\n                            defaultMessage='Faliure Icon'\n                        >\n                            {(title) => (\n                                <i\n                                    className='fa fa-times'\n                                    title={title}\n                                />\n                            )}\n                        </FormattedMessage>\n                        <FormattedMessage id='email_verify.failed'/>\n                    </p>\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <h3>\n                            <FormattedMessage\n                                id='email_verify.almost'\n                                defaultMessage='{siteName}: You are almost done'\n                                values={{\n                                    siteName: this.props.siteName,\n                                }}\n                            />\n                        </h3>\n                        <div>\n                            <p>\n                                <FormattedMessage\n                                    id='email_verify.notVerifiedBody'\n                                    defaultMessage='Please verify your email address. Check your inbox for an email.'\n                                />\n                            </p>\n                            <button\n                                onClick={this.handleResend}\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='email_verify.resend'\n                                    defaultMessage='Resend Email'\n                                />\n                            </button>\n                            {resendConfirm}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {sendVerificationEmail} from 'mattermost-redux/actions/users';\n\nimport ShouldVerifyEmail from './should_verify_email';\n\nconst mapStateToProps = (state) => {\n    const {SiteName: siteName} = getConfig(state);\n    return {siteName};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    actions: bindActionCreators({\n        sendVerificationEmail,\n    }, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShouldVerifyEmail);\n"],"sourceRoot":""}